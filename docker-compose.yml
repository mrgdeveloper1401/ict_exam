services:
  django:
    container_name: django
    build: .
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file: ".env"
    restart: always
    entrypoint: ["sh", "-c", "/app/scripts/django_sh.sh"]
    depends_on:
      - db

  db:
    container_name: ictdb
    image: docker.arvancloud.ir/postgres:16.9-alpine
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${COMPOSE_POSTGRES_USER}
      POSTGRES_DB: ${COMPOSE_POSTGRES_DB}
      POSTGRES_PASSWORD: ${COMPOSE_POSTGRES_PASSWORD}

  nginx:
    container_name: nginx
    image: docker.arvancloud.ir/nginx:1.27.5-alpine
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/archive/api.dxcode.ir/:/etc/letsencrypt/archive/api.dxcode.ir/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django

  celery:
    container_name: celery
    image: celery_base:1.0.0
    volumes:
      - .:/home
    entrypoint: ['celery', "-A", "ict.dj_celery", "worker", "-l", "INFO"]

#  master:
#    container_name: locust_master
#    image: docker.arvancloud.ir/locustio/locust:2.8.5
#    ports:
#      - "8089:8089"
#    volumes:
#      - ./locust_django:/mnt/locust
#    command: -f /mnt/locust/locust.py --master -H http://app:8000
#
#  worker:
#    image: docker.arvancloud.ir/locustio/locust:2.8.5
#    volumes:
#      - ./locust_django:/mnt/locust
#    command: -f /mnt/locust/locust.py -- worker -master-host master


volumes:
#  static_files:
  postgres_data_dv: